from Converter import Internal as I

is_top_tree                          = I.isTopTree                     ;  isTopTree                      = I.isTopTree;
is_std_node                          = I.isStdNode                     ;  isStdNode                      = I.isStdNode;
type_of_node                         = I.typeOfNode                    ;  typeOfNode                     = I.typeOfNode;
is_name                              = I.isName                        ;  isName                         = I.isName;
is_value                             = I.isValue                       ;  isValue                        = I.isValue;
is_child                             = I.isChild                       ;  isChild                        = I.isChild;
is_child1                            = I.isChild1                      ;  isChild1                       = I.isChild1;
is_child2                            = I.isChild2                      ;  isChild2                       = I.isChild2;
set_value                            = I.setValue                      ;  setValue                       = I.setValue;
_set_value                           = I._setValue                     ;  _setValue                      = I._setValue;
set_name                             = I.setName                       ;  setName                        = I.setName;
_set_name                            = I._setName                      ;  _setName                       = I._setName;
create_node                          = I.createNode                    ;  createNode                     = I.createNode;
add_child                            = I.addChild                      ;  addChild                       = I.addChild;
_add_child                           = I._addChild                     ;  _addChild                      = I._addChild;
create_child                         = I.createChild                   ;  createChild                    = I.createChild;
_create_child                        = I._createChild                  ;  _createChild                   = I._createChild;
create_unique_child                  = I.createUniqueChild             ;  createUniqueChild              = I.createUniqueChild;
_create_unique_child                 = I._createUniqueChild            ;  _createUniqueChild             = I._createUniqueChild;
create_nodes_from_path               = I.createNodesFromPath           ;  createNodesFromPath            = I.createNodesFromPath;
_create_nodes_from_path              = I._createNodesFromPath          ;  _createNodesFromPath           = I._createNodesFromPath;
create_cgns_version_node             = I.createCGNSVersionNode         ;  createCGNSVersionNode          = I.createCGNSVersionNode;
create_root_node                     = I.createRootNode                ;  createRootNode                 = I.createRootNode;
create_base_node                     = I.createBaseNode                ;  createBaseNode                 = I.createBaseNode;
new_cgns_tree                        = I.newCGNSTree                   ;  newCGNSTree                    = I.newCGNSTree;
new_cgns_base                        = I.newCGNSBase                   ;  newCGNSBase                    = I.newCGNSBase;
new_zone                             = I.newZone                       ;  newZone                        = I.newZone;
new_grid_coordinates                 = I.newGridCoordinates            ;  newGridCoordinates             = I.newGridCoordinates;
new_data_array                       = I.newDataArray                  ;  newDataArray                   = I.newDataArray;
new_data_class                       = I.newDataClass                  ;  newDataClass                   = I.newDataClass;
new_dimensional_units                = I.newDimensionalUnits           ;  newDimensionalUnits            = I.newDimensionalUnits;
new_dimensional_exponents            = I.newDimensionalExponents       ;  newDimensionalExponents        = I.newDimensionalExponents;
new_data_conversion                  = I.newDataConversion             ;  newDataConversion              = I.newDataConversion;
new_descriptor                       = I.newDescriptor                 ;  newDescriptor                  = I.newDescriptor;
new_grid_location                    = I.newGridLocation               ;  newGridLocation                = I.newGridLocation;
new_index_array                      = I.newIndexArray                 ;  newIndexArray                  = I.newIndexArray;
new_point_list                       = I.newPointList                  ;  newPointList                   = I.newPointList;
new_point_range                      = I.newPointRange                 ;  newPointRange                  = I.newPointRange;
new_rind                             = I.newRind                       ;  newRind                        = I.newRind;
new_simulation_type                  = I.newSimulationType             ;  newSimulationType              = I.newSimulationType;
new_ordinal                          = I.newOrdinal                    ;  newOrdinal                     = I.newOrdinal;
new_discrete_data                    = I.newDiscreteData               ;  newDiscreteData                = I.newDiscreteData;
new_integral_data                    = I.newIntegralData               ;  newIntegralData                = I.newIntegralData;
new_elements                         = I.newElements                   ;  newElements                    = I.newElements;
new_zone_bc                          = I.newZoneBC                     ;  newZoneBC                      = I.newZoneBC;
new_bc                               = I.newBC                         ;  newBC                          = I.newBC;
new_bc_data_set                      = I.newBCDataSet                  ;  newBCDataSet                   = I.newBCDataSet;
new_bc_data                          = I.newBCData                     ;  newBCData                      = I.newBCData;
new_bc_property                      = I.newBCProperty                 ;  newBCProperty                  = I.newBCProperty;
new_axi_symmetry                     = I.newAxiSymmetry                ;  newAxiSymmetry                 = I.newAxiSymmetry;
new_rotating_coordinates             = I.newRotatingCoordinates        ;  newRotatingCoordinates         = I.newRotatingCoordinates;
new_flow_solution                    = I.newFlowSolution               ;  newFlowSolution                = I.newFlowSolution;
new_zone_grid_connectivity           = I.newZoneGridConnectivity       ;  newZoneGridConnectivity        = I.newZoneGridConnectivity;
new_grid_connectivity1to1            = I.newGridConnectivity1to1       ;  newGridConnectivity1to1        = I.newGridConnectivity1to1;
new_grid_connectivity                = I.newGridConnectivity           ;  newGridConnectivity            = I.newGridConnectivity;
new_grid_connectivity_type           = I.newGridConnectivityType       ;  newGridConnectivityType        = I.newGridConnectivityType;
new_grid_connectivity_property       = I.newGridConnectivityProperty   ;  newGridConnectivityProperty    = I.newGridConnectivityProperty;
new_periodic                         = I.newPeriodic                   ;  newPeriodic                    = I.newPeriodic;
new_average_interface                = I.newAverageInterface           ;  newAverageInterface            = I.newAverageInterface;
new_zone_sub_region                  = I.newZoneSubRegion              ;  newZoneSubRegion               = I.newZoneSubRegion;
new_overset_holes                    = I.newOversetHoles               ;  newOversetHoles                = I.newOversetHoles;
new_flow_equation_set                = I.newFlowEquationSet            ;  newFlowEquationSet             = I.newFlowEquationSet;
new_governing_equations              = I.newGoverningEquations         ;  newGoverningEquations          = I.newGoverningEquations;
new_gas_model                        = I.newGasModel                   ;  newGasModel                    = I.newGasModel;
new_thermal_conductivity_model       = I.newThermalConductivityModel   ;  newThermalConductivityModel    = I.newThermalConductivityModel;
new_viscosity_model                  = I.newViscosityModel             ;  newViscosityModel              = I.newViscosityModel;
new_turbulence_closure               = I.newTurbulenceClosure          ;  newTurbulenceClosure           = I.newTurbulenceClosure;
new_turbulence_model                 = I.newTurbulenceModel            ;  newTurbulenceModel             = I.newTurbulenceModel;
new_thermal_relaxation_model         = I.newThermalRelaxationModel     ;  newThermalRelaxationModel      = I.newThermalRelaxationModel;
new_chemical_kinetics_model          = I.newChemicalKineticsModel      ;  newChemicalKineticsModel       = I.newChemicalKineticsModel;
new_em_electric_field_model          = I.newEMElectricFieldModel       ;  newEMElectricFieldModel        = I.newEMElectricFieldModel;
new_em_magnetic_field_model          = I.newEMMagneticFieldModel       ;  newEMMagneticFieldModel        = I.newEMMagneticFieldModel;
new_em_conductivity_model            = I.newEMConductivityModel        ;  newEMConductivityModel         = I.newEMConductivityModel;
new_base_iterative_data              = I.newBaseIterativeData          ;  newBaseIterativeData           = I.newBaseIterativeData;
new_zone_iterative_data              = I.newZoneIterativeData          ;  newZoneIterativeData           = I.newZoneIterativeData;
new_rigid_grid_motion                = I.newRigidGridMotion            ;  newRigidGridMotion             = I.newRigidGridMotion;
new_rigid_grid_motion_type           = I.newRigidGridMotionType        ;  newRigidGridMotionType         = I.newRigidGridMotionType;
new_reference_state                  = I.newReferenceState             ;  newReferenceState              = I.newReferenceState;
new_convergence_history              = I.newConvergenceHistory         ;  newConvergenceHistory          = I.newConvergenceHistory;
new_family                           = I.newFamily                     ;  newFamily                      = I.newFamily;
new_family_name                      = I.newFamilyName                 ;  newFamilyName                  = I.newFamilyName;
new_family_bc                        = I.newFamilyBC                   ;  newFamilyBC                    = I.newFamilyBC;
new_geometry_reference               = I.newGeometryReference          ;  newGeometryReference           = I.newGeometryReference;
new_arbitrary_grid_motion            = I.newArbitraryGridMotion        ;  newArbitraryGridMotion         = I.newArbitraryGridMotion;
new_user_defined_data                = I.newUserDefinedData            ;  newUserDefinedData             = I.newUserDefinedData;
new_gravity                          = I.newGravity                    ;  newGravity                     = I.newGravity;
new_parent_elements                  = I.newParentElements             ;  newParentElements              = I.newParentElements;
new_parent_elements_position         = I.newParentElementsPosition     ;  newParentElementsPosition      = I.newParentElementsPosition;
get_path                             = I.getPath                       ;  getPath                        = I.getPath;
get_node_from_path                   = I.getNodeFromPath               ;  getNodeFromPath                = I.getNodeFromPath;
get_zone_paths                       = I.getZonePaths                  ;  getZonePaths                   = I.getZonePaths;
get_paths_from_name                  = I.getPathsFromName              ;  getPathsFromName               = I.getPathsFromName;
get_paths_from_name1                 = I.getPathsFromName1             ;  getPathsFromName1              = I.getPathsFromName1;
get_paths_from_name2                 = I.getPathsFromName2             ;  getPathsFromName2              = I.getPathsFromName2;
get_paths_from_value                 = I.getPathsFromValue             ;  getPathsFromValue              = I.getPathsFromValue;
get_path_leaf                        = I.getPathLeaf                   ;  getPathLeaf                    = I.getPathLeaf;
get_path_ancestor                    = I.getPathAncestor               ;  getPathAncestor                = I.getPathAncestor;
get_all_zone                         = I.getZones                      ;  getZones                       = I.getZones;
get_all_zone_per_iteration           = I.getZonesPerIteration          ;  getZonesPerIteration           = I.getZonesPerIteration;
get_all_base                         = I.getBases                      ;  getBases                       = I.getBases;
get_nodes_from_name                  = I.getNodesFromName              ;  getNodesFromName               = I.getNodesFromName;
get_nodes_from_name1                 = I.getNodesFromName1             ;  getNodesFromName1              = I.getNodesFromName1;
get_nodes_from_name2                 = I.getNodesFromName2             ;  getNodesFromName2              = I.getNodesFromName2;
get_nodes_from_name3                 = I.getNodesFromName3             ;  getNodesFromName3              = I.getNodesFromName3;
get_by_name                          = I.getByName                     ;  getByName                      = I.getByName;
get_node_from_name                   = I.getNodeFromName               ;  getNodeFromName                = I.getNodeFromName;
get_node_from_name1                  = I.getNodeFromName1              ;  getNodeFromName1               = I.getNodeFromName1;
get_node_from_name2                  = I.getNodeFromName2              ;  getNodeFromName2               = I.getNodeFromName2;
get_node_from_name3                  = I.getNodeFromName3              ;  getNodeFromName3               = I.getNodeFromName3;
get_nodes_from_value                 = I.getNodesFromValue             ;  getNodesFromValue              = I.getNodesFromValue;
get_child_from_name                  = I.getChildFromName              ;  getChildFromName               = I.getChildFromName;
get_parent_of_node                   = I.getParentOfNode               ;  getParentOfNode                = I.getParentOfNode;
get_node_position                    = I.getNodePosition               ;  getNodePosition                = I.getNodePosition;
get_name                             = I.getName                       ;  getName                        = I.getName;
get_children                         = I.getChildren                   ;  getChildren                    = I.getChildren;
get_value                            = I.getValue                      ;  getValue                       = I.getValue;
get_val                              = I.getVal                        ;  getVal                         = I.getVal;
rm_node                              = I.rmNode                        ;  rmNode                         = I.rmNode;
_rm_node                             = I._rmNode                       ;  _rmNode                        = I._rmNode;
rm_node_by_path                      = I.rmNodeByPath                  ;  rmNodeByPath                   = I.rmNodeByPath;
_rm_node_by_path                     = I._rmNodeByPath                 ;  _rmNodeByPath                  = I._rmNodeByPath;
rm_nodes_by_name                     = I.rmNodesByName                 ;  rmNodesByName                  = I.rmNodesByName;
_rm_nodes_by_name                    = I._rmNodesByName                ;  _rmNodesByName                 = I._rmNodesByName;
_rm_nodes_by_name1                   = I._rmNodesByName1               ;  _rmNodesByName1                = I._rmNodesByName1;
_rm_nodes_by_name2                   = I._rmNodesByName2               ;  _rmNodesByName2                = I._rmNodesByName2;
rm_nodes_by_value                    = I.rmNodesByValue                ;  rmNodesByValue                 = I.rmNodesByValue;
_rm_nodes_by_value                   = I._rmNodesByValue               ;  _rmNodesByValue                = I._rmNodesByValue;
_move_node_from_paths                = I._moveNodeFromPaths            ;  _moveNodeFromPaths             = I._moveNodeFromPaths;
move_node_from_paths                 = I.moveNodeFromPaths             ;  moveNodeFromPaths              = I.moveNodeFromPaths;
sort_by_name                         = I.sortByName                    ;  sortByName                     = I.sortByName;
_sort_by_name                        = I._sortByName                   ;  _sortByName                    = I._sortByName;
rename_node                          = I.renameNode                    ;  renameNode                     = I.renameNode;
_rename_node                         = I._renameNode                   ;  _renameNode                    = I._renameNode;
_rename_node_re                      = I._renameNodeRe                 ;  _renameNodeRe                  = I._renameNodeRe;
append_base_name_to_zone_name        = I.appendBaseName2ZoneName       ;  appendBaseName2ZoneName        = I.appendBaseName2ZoneName;
_append_base_name_to_zone_name       = I._appendBaseName2ZoneName      ;  _appendBaseName2ZoneName       = I._appendBaseName2ZoneName;
_adapt_zone_names_for_slash          = I._adaptZoneNamesForSlash       ;  _adaptZoneNamesForSlash        = I._adaptZoneNamesForSlash;
copy_ref                             = I.copyRef                       ;  copyRef                        = I.copyRef;
copy_tree                            = I.copyTree                      ;  copyTree                       = I.copyTree;
copy_node                            = I.copyNode                      ;  copyNode                       = I.copyNode;
copy_value                           = I.copyValue                     ;  copyValue                      = I.copyValue;
print_tree                           = I.printTree                     ;  printTree                      = I.printTree;
get_size_of                          = I.getSizeOf                     ;  getSizeOf                      = I.getSizeOf;
node_to_py_tree                      = I.node2PyTree                   ;  node2PyTree                    = I.node2PyTree;
py_tree_to_node                      = I.pyTree2Node                   ;  pyTree2Node                    = I.pyTree2Node;
elt_name_to_elt_no                   = I.eltName2EltNo                 ;  eltName2EltNo                  = I.eltName2EltNo;
elt_no_to_elt_name                   = I.eltNo2EltName                 ;  eltNo2EltName                  = I.eltNo2EltName;
dim_from_elt_no                      = I.dimFromEltNo                  ;  dimFromEltNo                   = I.dimFromEltNo;
range_to_window                      = I.range2Window                  ;  range2Window                   = I.range2Window;
window_to_range                      = I.window2Range                  ;  window2Range                   = I.window2Range;
clear_list                           = I.clearList                     ;  clearList                      = I.clearList;
get_cgns_name                        = I.getCGNSName                   ;  getCGNSName                    = I.getCGNSName;
array_to_py_tree_dim                 = I.array2PyTreeDim               ;  array2PyTreeDim                = I.array2PyTreeDim;
create_data_node                     = I.createDataNode                ;  createDataNode                 = I.createDataNode;
create_zone_node                     = I.createZoneNode                ;  createZoneNode                 = I.createZoneNode;
convert_data_node_to_array           = I.convertDataNode2Array         ;  convertDataNode2Array          = I.convertDataNode2Array;
convert_data_node_to_array2          = I.convertDataNode2Array2        ;  convertDataNode2Array2         = I.convertDataNode2Array2;
convert_data_nodes_to_array          = I.convertDataNodes2Array        ;  convertDataNodes2Array         = I.convertDataNodes2Array;
convert_data_nodes_to_array2         = I.convertDataNodes2Array2       ;  convertDataNodes2Array2        = I.convertDataNodes2Array2;
_group_by_family                     = I._groupByFamily                ;  _groupByFamily                 = I._groupByFamily;
group_by_family                      = I.groupByFamily                 ;  groupByFamily                  = I.groupByFamily;
get_zone_dim                         = I.getZoneDim                    ;  getZoneDim                     = I.getZoneDim;
add_ghost_cells                      = I.addGhostCells                 ;  addGhostCells                  = I.addGhostCells;
_add_ghost_cells                     = I._addGhostCells                ;  _addGhostCells                 = I._addGhostCells;
rm_ghost_cells                       = I.rmGhostCells                  ;  rmGhostCells                   = I.rmGhostCells;
_rm_ghost_cells                      = I._rmGhostCells                 ;  _rmGhostCells                  = I._rmGhostCells;
rm_rind_cells                        = I.rmRindCells                   ;  rmRindCells                    = I.rmRindCells;
check_py_tree                        = I.checkPyTree                   ;  checkPyTree                    = I.checkPyTree;
correct_py_tree                      = I.correctPyTree                 ;  correctPyTree                  = I.correctPyTree;
_correct_py_tree                     = I._correctPyTree                ;  _correctPyTree                 = I._correctPyTree;
check_multigrid                      = I.checkMultigrid                ;  checkMultigrid                 = I.checkMultigrid;
check_size                           = I.checkSize                     ;  checkSize                      = I.checkSize;
_correct_bc_element_nodes            = I._correctBCElementNodes        ;  _correctBCElementNodes         = I._correctBCElementNodes;
add_one_layer2_bc                    = I.addOneLayer2BC                ;  addOneLayer2BC                 = I.addOneLayer2BC;
_add_one_layer2_bc                   = I._addOneLayer2BC               ;  _addOneLayer2BC                = I._addOneLayer2BC;
set_element_connectivity             = I.setElementConnectivity        ;  setElementConnectivity         = I.setElementConnectivity;
set_element_connectivity2            = I.setElementConnectivity2       ;  setElementConnectivity2        = I.setElementConnectivity2;
_set_element_dim                     = I._setElementDim                ;  _setElementDim                 = I._setElementDim;
get_element_nodes                    = I.getElementNodes               ;  getElementNodes                = I.getElementNodes;
get_element_boundary_nodes           = I.getElementBoundaryNodes       ;  getElementBoundaryNodes        = I.getElementBoundaryNodes;
_update_element_range                = I._updateElementRange           ;  _updateElementRange            = I._updateElementRange;
get_element_range                    = I.getElementRange               ;  getElementRange                = I.getElementRange;
adapt_pe_to_nce                      = I.adaptPE2NFace                 ;  adaptPE2NFace                  = I.adaptPE2NFace;
_adapt_pe_to_nce                     = I._adaptPE2NFace                ;  _adaptPE2NFace                 = I._adaptPE2NFace;
adapt_n_face2_pe                     = I.adaptNFace2PE                 ;  adaptNFace2PE                  = I.adaptNFace2PE;
_adapt_n_face2_pe                    = I._adaptNFace2PE                ;  _adaptNFace2PE                 = I._adaptNFace2PE;
_adapt_n_gon_to_index                = I._adaptNGon2Index              ;  _adaptNGon2Index               = I._adaptNGon2Index;
_adapt_n_face_to_index               = I._adaptNFace2Index             ;  _adaptNFace2Index              = I._adaptNFace2Index;
adapt_n_gon2_to_nn1                  = I.adaptNGon22NGon1              ;  adaptNGon22NGon1               = I.adaptNGon22NGon1;
_adapt_n_gon2_to_nn1                 = I._adaptNGon22NGon1             ;  _adaptNGon22NGon1              = I._adaptNGon22NGon1;
adapt_n_gon1_to_nn2                  = I.adaptNGon12NGon2              ;  adaptNGon12NGon2               = I.adaptNGon12NGon2;
_adapt_n_gon1_to_nn2                 = I._adaptNGon12NGon2             ;  _adaptNGon12NGon2              = I._adaptNGon12NGon2;
adapt_bc_face2_bcc                   = I.adaptBCFace2BCC               ;  adaptBCFace2BCC                = I.adaptBCFace2BCC;
_adapt_bc_face2_bcc                  = I._adaptBCFace2BCC              ;  _adaptBCFace2BCC               = I._adaptBCFace2BCC;
adapt_bcc_to_b_cce                   = I.adaptBCC2BCFace               ;  adaptBCC2BCFace                = I.adaptBCC2BCFace;
_adapt_bcc_to_b_cce                  = I._adaptBCC2BCFace              ;  _adaptBCC2BCFace               = I._adaptBCC2BCFace;
adapt_zone_bc_elt_range_to_elt_list  = I.adaptZoneBCEltRange2EltList   ;  adaptZoneBCEltRange2EltList    = I.adaptZoneBCEltRange2EltList;
_adapt_zone_bc_elt_range_to_elt_list = I._adaptZoneBCEltRange2EltList  ;  _adaptZoneBCEltRange2EltList   = I._adaptZoneBCEltRange2EltList;
get_element_range_dict               = I.getElementRangeDict           ;  getElementRangeDict            = I.getElementRangeDict;
referenced_element                   = I.referencedElement             ;  referencedElement              = I.referencedElement;
fix_n_gon                            = I.fixNGon                       ;  fixNGon                        = I.fixNGon;
_fix_n_gon                           = I._fixNGon                      ;  _fixNGon                       = I._fixNGon;
_unfix_n_gon                         = I._unfixNGon                    ;  _unfixNGon                     = I._unfixNGon;
_sort_nodes_in_zone                  = I._sortNodesInZone              ;  _sortNodesInZone               = I._sortNodesInZone;
create_elsa_hybrid                   = I.createElsaHybrid              ;  createElsaHybrid               = I.createElsaHybrid;
_create_elsa_hybrid                  = I._createElsaHybrid             ;  _createElsaHybrid              = I._createElsaHybrid;
convert_ijk_array21_d_array          = I.convertIJKArray21DArray       ;  convertIJKArray21DArray        = I.convertIJKArray21DArray;
get_rotation_angle_value_in_degrees  = I.getRotationAngleValueInDegrees;  getRotationAngleValueInDegrees = I.getRotationAngleValueInDegrees;
get_periodic_info                    = I.getPeriodicInfo               ;  getPeriodicInfo                = I.getPeriodicInfo;
get_bc_data_set                      = I.getBCDataSet                  ;  getBCDataSet                   = I.getBCDataSet;
get_bc_face_node                     = I.getBCFaceNode                 ;  getBCFaceNode                  = I.getBCFaceNode;
get_bc_data_set_containers           = I.getBCDataSetContainers        ;  getBCDataSetContainers         = I.getBCDataSetContainers;
auto_set_containers                  = I.autoSetContainers             ;  autoSetContainers              = I.autoSetContainers;
fix_var_name                         = I.fixVarName                    ;  fixVarName                     = I.fixVarName;
set_loc_to_glob                      = I.setLoc2Glob                   ;  setLoc2Glob                    = I.setLoc2Glob;
_set_loc_to_glob                     = I._setLoc2Glob                  ;  _setLoc2Glob                   = I._setLoc2Glob;
set_glob_to_loc                      = I.setGlob2Loc                   ;  setGlob2Loc                    = I.setGlob2Loc;
_set_glob_to_loc                     = I._setGlob2Loc                  ;  _setGlob2Loc                   = I._setGlob2Loc;
get_loc_to_glob                      = I.getLoc2Glob                   ;  getLoc2Glob                    = I.getLoc2Glob;
get_glob_to_loc                      = I.getGlob2Loc                   ;  getGlob2Loc                    = I.getGlob2Loc;
is_child_of                          = I.isChild                       ;  isChild                        = I.isChild;

# Additional(s)
is_label                             = I.isType                        ;  isType                         = I.isType;
is_name_and_label                    = I.isNameAndType                 ;  isNameAndType                  = I.isNameAndType;
set_label                            = I.setType                       ;  setType                        = I.setType;
_set_label                           = I._setType                      ;  _setType                       = I._setType;
get_nodes_from_label                 = I.getNodesFromType              ;  getNodesFromType               = I.getNodesFromType;
get_nodes_from_label1                = I.getNodesFromType1             ;  getNodesFromType1              = I.getNodesFromType1;
get_nodes_from_label2                = I.getNodesFromType2             ;  getNodesFromType2              = I.getNodesFromType2;
get_nodes_from_label3                = I.getNodesFromType3             ;  getNodesFromType3              = I.getNodesFromType3;
get_by_label                         = I.getByType                     ;  getByType                      = I.getByType;
get_node_from_label                  = I.getNodeFromType               ;  getNodeFromType                = I.getNodeFromType;
get_node_from_label1                 = I.getNodeFromType1              ;  getNodeFromType1               = I.getNodeFromType1;
get_node_from_label2                 = I.getNodeFromType2              ;  getNodeFromType2               = I.getNodeFromType2;
get_node_from_label3                 = I.getNodeFromType3              ;  getNodeFromType3               = I.getNodeFromType3;
get_paths_from_label                 = I.getPathsFromType              ;  getPathsFromType               = I.getPathsFromType;
get_paths_from_label1                = I.getPathsFromType1             ;  getPathsFromType1              = I.getPathsFromType1;
get_paths_from_label2                = I.getPathsFromType2             ;  getPathsFromType2              = I.getPathsFromType2;
get_nodes_from_name_and_label        = I.getNodesFromNameAndType       ;  getNodesFromNameAndType        = I.getNodesFromNameAndType;
get_node_from_name_and_label         = I.getNodeFromNameAndType        ;  getNodeFromNameAndType         = I.getNodeFromNameAndType;
get_child_from_label                 = I.getChildFromType              ;  getChildFromType               = I.getChildFromType;
get_parent_from_label                = I.getParentFromType             ;  getParentFromType              = I.getParentFromType;
get_parents_from_label               = I.getParentsFromType            ;  getParentsFromType             = I.getParentsFromType;
get_label                            = I.getType                       ;  getType                        = I.getType;
rm_nodes_by_label                    = I.rmNodesByType                 ;  rmNodesByType                  = I.rmNodesByType;
_rm_nodes_by_label                   = I._rmNodesByType                ;  _rmNodesByType                 = I._rmNodesByType;
_rm_nodes_by_label1                  = I._rmNodesByType1               ;  _rmNodesByType1                = I._rmNodesByType1;
_rm_nodes_by_label2                  = I._rmNodesByType2               ;  _rmNodesByType2                = I._rmNodesByType2;
rm_nodes_by_name_and_label           = I.rmNodesByNameAndType          ;  rmNodesByNameAndType           = I.rmNodesByNameAndType;
_rm_nodes_by_name_and_label          = I._rmNodesByNameAndType         ;  _rmNodesByNameAndType          = I._rmNodesByNameAndType;
get_zone_label                       = I.getZoneType                   ;  getZoneType                    = I.getZoneType;
group_bc_by_bc_label                 = I.groupBCByBCType               ;  groupBCByBCType                = I.groupBCByBCType;
_group_bc_by_bc_label                = I._groupBCByBCType              ;  _groupBCByBCType               = I._groupBCByBCType;
_merge_elts_t_per_label              = I._mergeEltsTPerType            ;  _mergeEltsTPerType             = I._mergeEltsTPerType;
_adapt_labels                        = I._adaptTypes                   ;  _adaptTypes                    = I._adaptTypes;

getLabel = I.getType;

# Overload Converter.Internal functions
from .Internal_ext import *